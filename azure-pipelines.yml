# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# Docker
# Build and push an image to Azure Container Registry (ACR)
# Trigger on the 'main' branch

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'my-webapp'
  tag: '$(Build.BuildId)'
  dockerRegistry: 'youracr.azurecr.io'
  dockerUsername: 'rosh04'
  dockerPassword: 'Roshini@0409'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
      displayName: 'Use Python 3.x'

    - script: |
        docker build -t $(imageName):$(tag) -f frontend/Dockerfile ./frontend
        docker build -t $(imageName)-backend:$(tag) -f backend/Dockerfile ./backend
        docker build -t $(imageName)-db:$(tag) -f db/Dockerfile ./db
      displayName: 'Build Docker Images'

    - script: |
        echo $(dockerPassword) | docker login $(dockerRegistry) --username $(dockerUsername) --password-stdin
      displayName: 'Login to Azure Container Registry'

    - script: |
        docker tag $(imageName):$(tag) $(dockerRegistry)/$(imageName):$(tag)
        docker tag $(imageName)-backend:$(tag) $(dockerRegistry)/$(imageName)-backend:$(tag)
        docker tag $(imageName)-db:$(tag) $(dockerRegistry)/$(imageName)-db:$(tag)
      displayName: 'Tag Docker Images'

    - script: |
        docker push $(dockerRegistry)/$(imageName):$(tag)
        docker push $(dockerRegistry)/$(imageName)-backend:$(tag)
        docker push $(dockerRegistry)/$(imageName)-db:$(tag)
      displayName: 'Push Docker Images to ACR'

- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'your-azure-subscription'
        azureResourceGroup: 'your-resource-group'
        kubernetesCluster: 'your-aks-cluster'
        namespace: 'default'
        command: 'apply'
        arguments: '-f k8s/deployment.yml'
      displayName: 'Deploy to AKS Cluster'
